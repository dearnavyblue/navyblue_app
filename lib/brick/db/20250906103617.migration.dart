// GENERATED CODE EDIT WITH CAUTION
// THIS FILE **WILL NOT** BE REGENERATED
// This file should be version controlled and can be manually edited.
part of 'schema.g.dart';

// While migrations are intelligently created, the difference between some commands, such as
// DropTable vs. RenameTable, cannot be determined. For this reason, please review migrations after
// they are created to ensure the correct inference was made.

// The migration version must **always** mirror the file name

const List<MigrationCommand> _migration_20250906103617_up = [
  InsertTable('ExamPaper'),
  InsertTable('_brick_Question_parts'),
  InsertTable('Question'),
  InsertTable('_brick_QuestionPart_solution_steps'),
  InsertTable('_brick_QuestionPart_sub_parts'),
  InsertTable('QuestionPart'),
  InsertTable('SolutionStep'),
  InsertTable('StepAttempt'),
  InsertTable('StudentAttempt'),
  InsertTable('User'),
  InsertColumn('id', Column.varchar, onTable: 'ExamPaper', unique: true),
  InsertColumn('title', Column.varchar, onTable: 'ExamPaper'),
  InsertColumn('subject', Column.varchar, onTable: 'ExamPaper'),
  InsertColumn('grade', Column.varchar, onTable: 'ExamPaper'),
  InsertColumn('syllabus', Column.varchar, onTable: 'ExamPaper'),
  InsertColumn('year', Column.integer, onTable: 'ExamPaper'),
  InsertColumn('exam_period', Column.varchar, onTable: 'ExamPaper'),
  InsertColumn('exam_level', Column.varchar, onTable: 'ExamPaper'),
  InsertColumn('paper_type', Column.varchar, onTable: 'ExamPaper'),
  InsertColumn('province', Column.varchar, onTable: 'ExamPaper'),
  InsertColumn('paper_number', Column.varchar, onTable: 'ExamPaper'),
  InsertColumn('duration_minutes', Column.integer, onTable: 'ExamPaper'),
  InsertColumn('instructions', Column.varchar, onTable: 'ExamPaper'),
  InsertColumn('total_marks', Column.integer, onTable: 'ExamPaper'),
  InsertColumn('is_active', Column.boolean, onTable: 'ExamPaper'),
  InsertColumn('uploaded_at', Column.datetime, onTable: 'ExamPaper'),
  InsertColumn('last_synced_at', Column.datetime, onTable: 'ExamPaper'),
  InsertColumn('is_favorite', Column.boolean, onTable: 'ExamPaper'),
  InsertColumn('needs_sync', Column.boolean, onTable: 'ExamPaper'),
  InsertColumn('device_info', Column.varchar, onTable: 'ExamPaper'),
  InsertForeignKey('_brick_Question_parts', 'Question', foreignKeyColumn: 'l_Question_brick_id', onDeleteCascade: true, onDeleteSetDefault: false),
  InsertForeignKey('_brick_Question_parts', 'QuestionPart', foreignKeyColumn: 'f_QuestionPart_brick_id', onDeleteCascade: true, onDeleteSetDefault: false),
  InsertColumn('id', Column.varchar, onTable: 'Question', unique: true),
  InsertColumn('paper_id', Column.varchar, onTable: 'Question'),
  InsertColumn('question_number', Column.varchar, onTable: 'Question'),
  InsertColumn('context_text', Column.varchar, onTable: 'Question'),
  InsertColumn('context_images', Column.varchar, onTable: 'Question'),
  InsertColumn('topics', Column.varchar, onTable: 'Question'),
  InsertColumn('total_marks', Column.integer, onTable: 'Question'),
  InsertColumn('order_index', Column.integer, onTable: 'Question'),
  InsertColumn('page_number', Column.integer, onTable: 'Question'),
  InsertColumn('is_active', Column.boolean, onTable: 'Question'),
  InsertColumn('created_at', Column.datetime, onTable: 'Question'),
  InsertColumn('parts', Column.varchar, onTable: 'Question'),
  InsertColumn('last_synced_at', Column.datetime, onTable: 'Question'),
  InsertColumn('needs_sync', Column.boolean, onTable: 'Question'),
  InsertColumn('device_info', Column.varchar, onTable: 'Question'),
  InsertForeignKey('_brick_QuestionPart_solution_steps', 'QuestionPart', foreignKeyColumn: 'l_QuestionPart_brick_id', onDeleteCascade: true, onDeleteSetDefault: false),
  InsertForeignKey('_brick_QuestionPart_solution_steps', 'SolutionStep', foreignKeyColumn: 'f_SolutionStep_brick_id', onDeleteCascade: true, onDeleteSetDefault: false),
  InsertForeignKey('_brick_QuestionPart_sub_parts', 'QuestionPart', foreignKeyColumn: 'l_QuestionPart_brick_id', onDeleteCascade: true, onDeleteSetDefault: false),
  InsertForeignKey('_brick_QuestionPart_sub_parts', 'QuestionPart', foreignKeyColumn: 'f_QuestionPart_brick_id', onDeleteCascade: true, onDeleteSetDefault: false),
  InsertColumn('id', Column.varchar, onTable: 'QuestionPart', unique: true),
  InsertColumn('question_id', Column.varchar, onTable: 'QuestionPart'),
  InsertColumn('parent_part_id', Column.varchar, onTable: 'QuestionPart'),
  InsertColumn('part_number', Column.varchar, onTable: 'QuestionPart'),
  InsertColumn('part_text', Column.varchar, onTable: 'QuestionPart'),
  InsertColumn('marks', Column.integer, onTable: 'QuestionPart'),
  InsertColumn('part_images', Column.varchar, onTable: 'QuestionPart'),
  InsertColumn('nesting_level', Column.integer, onTable: 'QuestionPart'),
  InsertColumn('order_index', Column.integer, onTable: 'QuestionPart'),
  InsertColumn('requires_working', Column.boolean, onTable: 'QuestionPart'),
  InsertColumn('is_active', Column.boolean, onTable: 'QuestionPart'),
  InsertColumn('created_at', Column.datetime, onTable: 'QuestionPart'),
  InsertColumn('solution_steps', Column.varchar, onTable: 'QuestionPart'),
  InsertColumn('sub_parts', Column.varchar, onTable: 'QuestionPart'),
  InsertColumn('last_synced_at', Column.datetime, onTable: 'QuestionPart'),
  InsertColumn('needs_sync', Column.boolean, onTable: 'QuestionPart'),
  InsertColumn('device_info', Column.varchar, onTable: 'QuestionPart'),
  InsertColumn('has_sub_parts', Column.boolean, onTable: 'QuestionPart'),
  InsertColumn('has_solution_steps', Column.boolean, onTable: 'QuestionPart'),
  InsertColumn('total_steps', Column.integer, onTable: 'QuestionPart'),
  InsertColumn('id', Column.varchar, onTable: 'SolutionStep', unique: true),
  InsertColumn('part_id', Column.varchar, onTable: 'SolutionStep'),
  InsertColumn('step_number', Column.integer, onTable: 'SolutionStep'),
  InsertColumn('description', Column.varchar, onTable: 'SolutionStep'),
  InsertColumn('working_out', Column.varchar, onTable: 'SolutionStep'),
  InsertColumn('marks_for_this_step', Column.integer, onTable: 'SolutionStep'),
  InsertColumn('solution_images', Column.varchar, onTable: 'SolutionStep'),
  InsertColumn('teaching_note', Column.varchar, onTable: 'SolutionStep'),
  InsertColumn('hint_text', Column.varchar, onTable: 'SolutionStep'),
  InsertColumn('order_index', Column.integer, onTable: 'SolutionStep'),
  InsertColumn('is_critical_step', Column.boolean, onTable: 'SolutionStep'),
  InsertColumn('created_at', Column.datetime, onTable: 'SolutionStep'),
  InsertColumn('last_synced_at', Column.datetime, onTable: 'SolutionStep'),
  InsertColumn('needs_sync', Column.boolean, onTable: 'SolutionStep'),
  InsertColumn('device_info', Column.varchar, onTable: 'SolutionStep'),
  InsertColumn('id', Column.varchar, onTable: 'StepAttempt', unique: true),
  InsertColumn('student_attempt_id', Column.varchar, onTable: 'StepAttempt'),
  InsertColumn('step_id', Column.varchar, onTable: 'StepAttempt'),
  InsertColumn('status', Column.varchar, onTable: 'StepAttempt'),
  InsertColumn('marked_at', Column.datetime, onTable: 'StepAttempt'),
  InsertColumn('last_synced_at', Column.datetime, onTable: 'StepAttempt'),
  InsertColumn('needs_sync', Column.boolean, onTable: 'StepAttempt'),
  InsertColumn('is_correct', Column.boolean, onTable: 'StepAttempt'),
  InsertColumn('is_incorrect', Column.boolean, onTable: 'StepAttempt'),
  InsertColumn('is_not_attempted', Column.boolean, onTable: 'StepAttempt'),
  InsertColumn('id', Column.varchar, onTable: 'StudentAttempt', unique: true),
  InsertColumn('paper_id', Column.varchar, onTable: 'StudentAttempt'),
  InsertColumn('mode', Column.varchar, onTable: 'StudentAttempt'),
  InsertColumn('enable_hints', Column.boolean, onTable: 'StudentAttempt'),
  InsertColumn('started_at', Column.datetime, onTable: 'StudentAttempt'),
  InsertColumn('timer_started_at', Column.datetime, onTable: 'StudentAttempt'),
  InsertColumn('completed_at', Column.datetime, onTable: 'StudentAttempt'),
  InsertColumn('last_activity_at', Column.datetime, onTable: 'StudentAttempt'),
  InsertColumn('total_marks_earned', Column.integer, onTable: 'StudentAttempt'),
  InsertColumn('total_marks_possible', Column.integer, onTable: 'StudentAttempt'),
  InsertColumn('percentage_score', Column.Double, onTable: 'StudentAttempt'),
  InsertColumn('time_spent_minutes', Column.integer, onTable: 'StudentAttempt'),
  InsertColumn('questions_attempted', Column.integer, onTable: 'StudentAttempt'),
  InsertColumn('questions_completed', Column.integer, onTable: 'StudentAttempt'),
  InsertColumn('is_abandoned', Column.boolean, onTable: 'StudentAttempt'),
  InsertColumn('auto_submitted', Column.boolean, onTable: 'StudentAttempt'),
  InsertColumn('step_statuses', Column.varchar, onTable: 'StudentAttempt'),
  InsertColumn('calculated_progress', Column.varchar, onTable: 'StudentAttempt'),
  InsertColumn('last_synced_at', Column.datetime, onTable: 'StudentAttempt'),
  InsertColumn('needs_sync', Column.boolean, onTable: 'StudentAttempt'),
  InsertColumn('device_info', Column.varchar, onTable: 'StudentAttempt'),
  InsertColumn('is_completed', Column.boolean, onTable: 'StudentAttempt'),
  InsertColumn('is_in_progress', Column.boolean, onTable: 'StudentAttempt'),
  InsertColumn('is_practice_mode', Column.boolean, onTable: 'StudentAttempt'),
  InsertColumn('is_exam_mode', Column.boolean, onTable: 'StudentAttempt'),
  InsertColumn('effective_last_activity_at', Column.datetime, onTable: 'StudentAttempt'),
  InsertColumn('effective_last_synced_at', Column.datetime, onTable: 'StudentAttempt'),
  InsertColumn('progress_percentage', Column.Double, onTable: 'StudentAttempt'),
  InsertColumn('marked_steps_count', Column.integer, onTable: 'StudentAttempt'),
  InsertColumn('correct_steps_count', Column.integer, onTable: 'StudentAttempt'),
  InsertColumn('calculated_earned_marks', Column.integer, onTable: 'StudentAttempt'),
  InsertColumn('calculated_possible_marks', Column.integer, onTable: 'StudentAttempt'),
  InsertColumn('calculated_marked_steps', Column.integer, onTable: 'StudentAttempt'),
  InsertColumn('calculated_total_steps', Column.integer, onTable: 'StudentAttempt'),
  InsertColumn('id', Column.varchar, onTable: 'User', unique: true),
  InsertColumn('email', Column.varchar, onTable: 'User'),
  InsertColumn('first_name', Column.varchar, onTable: 'User'),
  InsertColumn('last_name', Column.varchar, onTable: 'User'),
  InsertColumn('grade', Column.varchar, onTable: 'User'),
  InsertColumn('province', Column.varchar, onTable: 'User'),
  InsertColumn('syllabus', Column.varchar, onTable: 'User'),
  InsertColumn('school_name', Column.varchar, onTable: 'User'),
  InsertColumn('role', Column.varchar, onTable: 'User'),
  InsertColumn('is_email_verified', Column.boolean, onTable: 'User'),
  InsertColumn('created_at', Column.datetime, onTable: 'User'),
  InsertColumn('access_token', Column.varchar, onTable: 'User'),
  InsertColumn('refresh_token', Column.varchar, onTable: 'User'),
  InsertColumn('token_expires_at', Column.datetime, onTable: 'User'),
  InsertColumn('last_login_at', Column.datetime, onTable: 'User'),
  InsertColumn('last_synced_at', Column.datetime, onTable: 'User'),
  InsertColumn('needs_sync', Column.boolean, onTable: 'User'),
  InsertColumn('device_info', Column.varchar, onTable: 'User'),
  InsertColumn('full_name', Column.varchar, onTable: 'User'),
  InsertColumn('is_admin', Column.boolean, onTable: 'User'),
  InsertColumn('is_token_valid', Column.boolean, onTable: 'User'),
  InsertColumn('grade_display_name', Column.varchar, onTable: 'User'),
  InsertColumn('subject_display_name', Column.varchar, onTable: 'User'),
  CreateIndex(columns: ['l_Question_brick_id', 'f_QuestionPart_brick_id'], onTable: '_brick_Question_parts', unique: true),
  CreateIndex(columns: ['l_QuestionPart_brick_id', 'f_SolutionStep_brick_id'], onTable: '_brick_QuestionPart_solution_steps', unique: true),
  CreateIndex(columns: ['l_QuestionPart_brick_id', 'f_QuestionPart_brick_id'], onTable: '_brick_QuestionPart_sub_parts', unique: true)
];

const List<MigrationCommand> _migration_20250906103617_down = [
  DropTable('ExamPaper'),
  DropTable('_brick_Question_parts'),
  DropTable('Question'),
  DropTable('_brick_QuestionPart_solution_steps'),
  DropTable('_brick_QuestionPart_sub_parts'),
  DropTable('QuestionPart'),
  DropTable('SolutionStep'),
  DropTable('StepAttempt'),
  DropTable('StudentAttempt'),
  DropTable('User'),
  DropColumn('id', onTable: 'ExamPaper'),
  DropColumn('title', onTable: 'ExamPaper'),
  DropColumn('subject', onTable: 'ExamPaper'),
  DropColumn('grade', onTable: 'ExamPaper'),
  DropColumn('syllabus', onTable: 'ExamPaper'),
  DropColumn('year', onTable: 'ExamPaper'),
  DropColumn('exam_period', onTable: 'ExamPaper'),
  DropColumn('exam_level', onTable: 'ExamPaper'),
  DropColumn('paper_type', onTable: 'ExamPaper'),
  DropColumn('province', onTable: 'ExamPaper'),
  DropColumn('paper_number', onTable: 'ExamPaper'),
  DropColumn('duration_minutes', onTable: 'ExamPaper'),
  DropColumn('instructions', onTable: 'ExamPaper'),
  DropColumn('total_marks', onTable: 'ExamPaper'),
  DropColumn('is_active', onTable: 'ExamPaper'),
  DropColumn('uploaded_at', onTable: 'ExamPaper'),
  DropColumn('last_synced_at', onTable: 'ExamPaper'),
  DropColumn('is_favorite', onTable: 'ExamPaper'),
  DropColumn('needs_sync', onTable: 'ExamPaper'),
  DropColumn('device_info', onTable: 'ExamPaper'),
  DropColumn('l_Question_brick_id', onTable: '_brick_Question_parts'),
  DropColumn('f_QuestionPart_brick_id', onTable: '_brick_Question_parts'),
  DropColumn('id', onTable: 'Question'),
  DropColumn('paper_id', onTable: 'Question'),
  DropColumn('question_number', onTable: 'Question'),
  DropColumn('context_text', onTable: 'Question'),
  DropColumn('context_images', onTable: 'Question'),
  DropColumn('topics', onTable: 'Question'),
  DropColumn('total_marks', onTable: 'Question'),
  DropColumn('order_index', onTable: 'Question'),
  DropColumn('page_number', onTable: 'Question'),
  DropColumn('is_active', onTable: 'Question'),
  DropColumn('created_at', onTable: 'Question'),
  DropColumn('parts', onTable: 'Question'),
  DropColumn('last_synced_at', onTable: 'Question'),
  DropColumn('needs_sync', onTable: 'Question'),
  DropColumn('device_info', onTable: 'Question'),
  DropColumn('l_QuestionPart_brick_id', onTable: '_brick_QuestionPart_solution_steps'),
  DropColumn('f_SolutionStep_brick_id', onTable: '_brick_QuestionPart_solution_steps'),
  DropColumn('l_QuestionPart_brick_id', onTable: '_brick_QuestionPart_sub_parts'),
  DropColumn('f_QuestionPart_brick_id', onTable: '_brick_QuestionPart_sub_parts'),
  DropColumn('id', onTable: 'QuestionPart'),
  DropColumn('question_id', onTable: 'QuestionPart'),
  DropColumn('parent_part_id', onTable: 'QuestionPart'),
  DropColumn('part_number', onTable: 'QuestionPart'),
  DropColumn('part_text', onTable: 'QuestionPart'),
  DropColumn('marks', onTable: 'QuestionPart'),
  DropColumn('part_images', onTable: 'QuestionPart'),
  DropColumn('nesting_level', onTable: 'QuestionPart'),
  DropColumn('order_index', onTable: 'QuestionPart'),
  DropColumn('requires_working', onTable: 'QuestionPart'),
  DropColumn('is_active', onTable: 'QuestionPart'),
  DropColumn('created_at', onTable: 'QuestionPart'),
  DropColumn('solution_steps', onTable: 'QuestionPart'),
  DropColumn('sub_parts', onTable: 'QuestionPart'),
  DropColumn('last_synced_at', onTable: 'QuestionPart'),
  DropColumn('needs_sync', onTable: 'QuestionPart'),
  DropColumn('device_info', onTable: 'QuestionPart'),
  DropColumn('has_sub_parts', onTable: 'QuestionPart'),
  DropColumn('has_solution_steps', onTable: 'QuestionPart'),
  DropColumn('total_steps', onTable: 'QuestionPart'),
  DropColumn('id', onTable: 'SolutionStep'),
  DropColumn('part_id', onTable: 'SolutionStep'),
  DropColumn('step_number', onTable: 'SolutionStep'),
  DropColumn('description', onTable: 'SolutionStep'),
  DropColumn('working_out', onTable: 'SolutionStep'),
  DropColumn('marks_for_this_step', onTable: 'SolutionStep'),
  DropColumn('solution_images', onTable: 'SolutionStep'),
  DropColumn('teaching_note', onTable: 'SolutionStep'),
  DropColumn('hint_text', onTable: 'SolutionStep'),
  DropColumn('order_index', onTable: 'SolutionStep'),
  DropColumn('is_critical_step', onTable: 'SolutionStep'),
  DropColumn('created_at', onTable: 'SolutionStep'),
  DropColumn('last_synced_at', onTable: 'SolutionStep'),
  DropColumn('needs_sync', onTable: 'SolutionStep'),
  DropColumn('device_info', onTable: 'SolutionStep'),
  DropColumn('id', onTable: 'StepAttempt'),
  DropColumn('student_attempt_id', onTable: 'StepAttempt'),
  DropColumn('step_id', onTable: 'StepAttempt'),
  DropColumn('status', onTable: 'StepAttempt'),
  DropColumn('marked_at', onTable: 'StepAttempt'),
  DropColumn('last_synced_at', onTable: 'StepAttempt'),
  DropColumn('needs_sync', onTable: 'StepAttempt'),
  DropColumn('is_correct', onTable: 'StepAttempt'),
  DropColumn('is_incorrect', onTable: 'StepAttempt'),
  DropColumn('is_not_attempted', onTable: 'StepAttempt'),
  DropColumn('id', onTable: 'StudentAttempt'),
  DropColumn('paper_id', onTable: 'StudentAttempt'),
  DropColumn('mode', onTable: 'StudentAttempt'),
  DropColumn('enable_hints', onTable: 'StudentAttempt'),
  DropColumn('started_at', onTable: 'StudentAttempt'),
  DropColumn('timer_started_at', onTable: 'StudentAttempt'),
  DropColumn('completed_at', onTable: 'StudentAttempt'),
  DropColumn('last_activity_at', onTable: 'StudentAttempt'),
  DropColumn('total_marks_earned', onTable: 'StudentAttempt'),
  DropColumn('total_marks_possible', onTable: 'StudentAttempt'),
  DropColumn('percentage_score', onTable: 'StudentAttempt'),
  DropColumn('time_spent_minutes', onTable: 'StudentAttempt'),
  DropColumn('questions_attempted', onTable: 'StudentAttempt'),
  DropColumn('questions_completed', onTable: 'StudentAttempt'),
  DropColumn('is_abandoned', onTable: 'StudentAttempt'),
  DropColumn('auto_submitted', onTable: 'StudentAttempt'),
  DropColumn('step_statuses', onTable: 'StudentAttempt'),
  DropColumn('calculated_progress', onTable: 'StudentAttempt'),
  DropColumn('last_synced_at', onTable: 'StudentAttempt'),
  DropColumn('needs_sync', onTable: 'StudentAttempt'),
  DropColumn('device_info', onTable: 'StudentAttempt'),
  DropColumn('is_completed', onTable: 'StudentAttempt'),
  DropColumn('is_in_progress', onTable: 'StudentAttempt'),
  DropColumn('is_practice_mode', onTable: 'StudentAttempt'),
  DropColumn('is_exam_mode', onTable: 'StudentAttempt'),
  DropColumn('effective_last_activity_at', onTable: 'StudentAttempt'),
  DropColumn('effective_last_synced_at', onTable: 'StudentAttempt'),
  DropColumn('progress_percentage', onTable: 'StudentAttempt'),
  DropColumn('marked_steps_count', onTable: 'StudentAttempt'),
  DropColumn('correct_steps_count', onTable: 'StudentAttempt'),
  DropColumn('calculated_earned_marks', onTable: 'StudentAttempt'),
  DropColumn('calculated_possible_marks', onTable: 'StudentAttempt'),
  DropColumn('calculated_marked_steps', onTable: 'StudentAttempt'),
  DropColumn('calculated_total_steps', onTable: 'StudentAttempt'),
  DropColumn('id', onTable: 'User'),
  DropColumn('email', onTable: 'User'),
  DropColumn('first_name', onTable: 'User'),
  DropColumn('last_name', onTable: 'User'),
  DropColumn('grade', onTable: 'User'),
  DropColumn('province', onTable: 'User'),
  DropColumn('syllabus', onTable: 'User'),
  DropColumn('school_name', onTable: 'User'),
  DropColumn('role', onTable: 'User'),
  DropColumn('is_email_verified', onTable: 'User'),
  DropColumn('created_at', onTable: 'User'),
  DropColumn('access_token', onTable: 'User'),
  DropColumn('refresh_token', onTable: 'User'),
  DropColumn('token_expires_at', onTable: 'User'),
  DropColumn('last_login_at', onTable: 'User'),
  DropColumn('last_synced_at', onTable: 'User'),
  DropColumn('needs_sync', onTable: 'User'),
  DropColumn('device_info', onTable: 'User'),
  DropColumn('full_name', onTable: 'User'),
  DropColumn('is_admin', onTable: 'User'),
  DropColumn('is_token_valid', onTable: 'User'),
  DropColumn('grade_display_name', onTable: 'User'),
  DropColumn('subject_display_name', onTable: 'User'),
  DropIndex('index__brick_Question_parts_on_l_Question_brick_id_f_QuestionPart_brick_id'),
  DropIndex('index__brick_QuestionPart_solution_steps_on_l_QuestionPart_brick_id_f_SolutionStep_brick_id'),
  DropIndex('index__brick_QuestionPart_sub_parts_on_l_QuestionPart_brick_id_f_QuestionPart_brick_id')
];

//
// DO NOT EDIT BELOW THIS LINE
//

@Migratable(
  version: '20250906103617',
  up: _migration_20250906103617_up,
  down: _migration_20250906103617_down,
)
class Migration20250906103617 extends Migration {
  const Migration20250906103617()
    : super(
        version: 20250906103617,
        up: _migration_20250906103617_up,
        down: _migration_20250906103617_down,
      );
}

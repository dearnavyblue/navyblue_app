// GENERATED CODE EDIT WITH CAUTION
// THIS FILE **WILL NOT** BE REGENERATED
// This file should be version controlled and can be manually edited.
part of 'schema.g.dart';

// While migrations are intelligently created, the difference between some commands, such as
// DropTable vs. RenameTable, cannot be determined. For this reason, please review migrations after
// they are created to ensure the correct inference was made.

// The migration version must **always** mirror the file name

const List<MigrationCommand> _migration_20251017113207_up = [
  InsertTable('MCQOption'),
  InsertTable('_brick_Question_mcq_options'),
  InsertTable('_brick_QuestionPart_mcq_options'),
  InsertColumn('id', Column.varchar, onTable: 'MCQOption', unique: true),
  InsertColumn('question_id', Column.varchar, onTable: 'MCQOption'),
  InsertColumn('part_id', Column.varchar, onTable: 'MCQOption'),
  InsertColumn('label', Column.varchar, onTable: 'MCQOption'),
  InsertColumn('text', Column.varchar, onTable: 'MCQOption'),
  InsertColumn('option_images', Column.varchar, onTable: 'MCQOption'),
  InsertColumn('is_correct', Column.boolean, onTable: 'MCQOption'),
  InsertColumn('order_index', Column.integer, onTable: 'MCQOption'),
  InsertColumn('created_at', Column.datetime, onTable: 'MCQOption'),
  InsertColumn('last_synced_at', Column.datetime, onTable: 'MCQOption'),
  InsertColumn('needs_sync', Column.boolean, onTable: 'MCQOption'),
  InsertColumn('device_info', Column.varchar, onTable: 'MCQOption'),
  InsertColumn('has_text', Column.boolean, onTable: 'MCQOption'),
  InsertColumn('has_images', Column.boolean, onTable: 'MCQOption'),
  InsertColumn('belongs_to_question', Column.boolean, onTable: 'MCQOption'),
  InsertColumn('belongs_to_part', Column.boolean, onTable: 'MCQOption'),
  InsertForeignKey('_brick_Question_mcq_options', 'Question', foreignKeyColumn: 'l_Question_brick_id', onDeleteCascade: true, onDeleteSetDefault: false),
  InsertForeignKey('_brick_Question_mcq_options', 'MCQOption', foreignKeyColumn: 'f_MCQOption_brick_id', onDeleteCascade: true, onDeleteSetDefault: false),
  InsertForeignKey('_brick_QuestionPart_mcq_options', 'QuestionPart', foreignKeyColumn: 'l_QuestionPart_brick_id', onDeleteCascade: true, onDeleteSetDefault: false),
  InsertForeignKey('_brick_QuestionPart_mcq_options', 'MCQOption', foreignKeyColumn: 'f_MCQOption_brick_id', onDeleteCascade: true, onDeleteSetDefault: false),
  InsertColumn('has_images', Column.boolean, onTable: 'SolutionStep'),
  InsertColumn('has_working_out', Column.boolean, onTable: 'SolutionStep'),
  InsertColumn('has_teaching_note', Column.boolean, onTable: 'SolutionStep'),
  InsertColumn('has_marks', Column.boolean, onTable: 'SolutionStep'),
  CreateIndex(columns: ['subject'], onTable: 'ExamPaper', unique: false),
  CreateIndex(columns: ['grade'], onTable: 'ExamPaper', unique: false),
  CreateIndex(columns: ['syllabus'], onTable: 'ExamPaper', unique: false),
  CreateIndex(columns: ['year'], onTable: 'ExamPaper', unique: false),
  CreateIndex(columns: ['exam_period'], onTable: 'ExamPaper', unique: false),
  CreateIndex(columns: ['paper_type'], onTable: 'ExamPaper', unique: false),
  CreateIndex(columns: ['is_active'], onTable: 'ExamPaper', unique: false),
  CreateIndex(columns: ['uploaded_at'], onTable: 'ExamPaper', unique: false),
  CreateIndex(columns: ['last_synced_at'], onTable: 'ExamPaper', unique: false),
  CreateIndex(columns: ['needs_sync'], onTable: 'ExamPaper', unique: false),
  CreateIndex(columns: ['question_id'], onTable: 'MCQOption', unique: false),
  CreateIndex(columns: ['part_id'], onTable: 'MCQOption', unique: false),
  CreateIndex(columns: ['is_correct'], onTable: 'MCQOption', unique: false),
  CreateIndex(columns: ['order_index'], onTable: 'MCQOption', unique: false),
  CreateIndex(columns: ['updated_at'], onTable: 'PaperFilters', unique: false),
  CreateIndex(columns: ['last_synced_at'], onTable: 'PaperFilters', unique: false),
  CreateIndex(columns: ['needs_sync'], onTable: 'PaperFilters', unique: false),
  CreateIndex(columns: ['l_Question_brick_id', 'f_MCQOption_brick_id'], onTable: '_brick_Question_mcq_options', unique: true),
  CreateIndex(columns: ['paper_id'], onTable: 'Question', unique: false),
  CreateIndex(columns: ['order_index'], onTable: 'Question', unique: false),
  CreateIndex(columns: ['page_number'], onTable: 'Question', unique: false),
  CreateIndex(columns: ['is_active'], onTable: 'Question', unique: false),
  CreateIndex(columns: ['last_synced_at'], onTable: 'Question', unique: false),
  CreateIndex(columns: ['needs_sync'], onTable: 'Question', unique: false),
  CreateIndex(columns: ['l_QuestionPart_brick_id', 'f_MCQOption_brick_id'], onTable: '_brick_QuestionPart_mcq_options', unique: true),
  CreateIndex(columns: ['question_id'], onTable: 'QuestionPart', unique: false),
  CreateIndex(columns: ['parent_part_id'], onTable: 'QuestionPart', unique: false),
  CreateIndex(columns: ['nesting_level'], onTable: 'QuestionPart', unique: false),
  CreateIndex(columns: ['order_index'], onTable: 'QuestionPart', unique: false),
  CreateIndex(columns: ['is_active'], onTable: 'QuestionPart', unique: false),
  CreateIndex(columns: ['last_synced_at'], onTable: 'QuestionPart', unique: false),
  CreateIndex(columns: ['needs_sync'], onTable: 'QuestionPart', unique: false),
  CreateIndex(columns: ['part_id'], onTable: 'SolutionStep', unique: false),
  CreateIndex(columns: ['question_id'], onTable: 'SolutionStep', unique: false),
  CreateIndex(columns: ['order_index'], onTable: 'SolutionStep', unique: false),
  CreateIndex(columns: ['last_synced_at'], onTable: 'SolutionStep', unique: false),
  CreateIndex(columns: ['needs_sync'], onTable: 'SolutionStep', unique: false),
  CreateIndex(columns: ['student_attempt_id'], onTable: 'StepAttempt', unique: false),
  CreateIndex(columns: ['step_id'], onTable: 'StepAttempt', unique: false),
  CreateIndex(columns: ['status'], onTable: 'StepAttempt', unique: false),
  CreateIndex(columns: ['last_synced_at'], onTable: 'StepAttempt', unique: false),
  CreateIndex(columns: ['needs_sync'], onTable: 'StepAttempt', unique: false),
  CreateIndex(columns: ['paper_id'], onTable: 'StudentAttempt', unique: false),
  CreateIndex(columns: ['mode'], onTable: 'StudentAttempt', unique: false),
  CreateIndex(columns: ['started_at'], onTable: 'StudentAttempt', unique: false),
  CreateIndex(columns: ['completed_at'], onTable: 'StudentAttempt', unique: false),
  CreateIndex(columns: ['last_synced_at'], onTable: 'StudentAttempt', unique: false),
  CreateIndex(columns: ['needs_sync'], onTable: 'StudentAttempt', unique: false),
  CreateIndex(columns: ['email'], onTable: 'User', unique: false),
  CreateIndex(columns: ['grade'], onTable: 'User', unique: false),
  CreateIndex(columns: ['role'], onTable: 'User', unique: false),
  CreateIndex(columns: ['last_synced_at'], onTable: 'User', unique: false),
  CreateIndex(columns: ['needs_sync'], onTable: 'User', unique: false)
];

const List<MigrationCommand> _migration_20251017113207_down = [
  DropTable('MCQOption'),
  DropTable('_brick_Question_mcq_options'),
  DropTable('_brick_QuestionPart_mcq_options'),
  DropColumn('id', onTable: 'MCQOption'),
  DropColumn('question_id', onTable: 'MCQOption'),
  DropColumn('part_id', onTable: 'MCQOption'),
  DropColumn('label', onTable: 'MCQOption'),
  DropColumn('text', onTable: 'MCQOption'),
  DropColumn('option_images', onTable: 'MCQOption'),
  DropColumn('is_correct', onTable: 'MCQOption'),
  DropColumn('order_index', onTable: 'MCQOption'),
  DropColumn('created_at', onTable: 'MCQOption'),
  DropColumn('last_synced_at', onTable: 'MCQOption'),
  DropColumn('needs_sync', onTable: 'MCQOption'),
  DropColumn('device_info', onTable: 'MCQOption'),
  DropColumn('has_text', onTable: 'MCQOption'),
  DropColumn('has_images', onTable: 'MCQOption'),
  DropColumn('belongs_to_question', onTable: 'MCQOption'),
  DropColumn('belongs_to_part', onTable: 'MCQOption'),
  DropColumn('l_Question_brick_id', onTable: '_brick_Question_mcq_options'),
  DropColumn('f_MCQOption_brick_id', onTable: '_brick_Question_mcq_options'),
  DropColumn('l_QuestionPart_brick_id', onTable: '_brick_QuestionPart_mcq_options'),
  DropColumn('f_MCQOption_brick_id', onTable: '_brick_QuestionPart_mcq_options'),
  DropColumn('has_images', onTable: 'SolutionStep'),
  DropColumn('has_working_out', onTable: 'SolutionStep'),
  DropColumn('has_teaching_note', onTable: 'SolutionStep'),
  DropColumn('has_marks', onTable: 'SolutionStep'),
  DropIndex('index_ExamPaper_on_subject'),
  DropIndex('index_ExamPaper_on_grade'),
  DropIndex('index_ExamPaper_on_syllabus'),
  DropIndex('index_ExamPaper_on_year'),
  DropIndex('index_ExamPaper_on_exam_period'),
  DropIndex('index_ExamPaper_on_paper_type'),
  DropIndex('index_ExamPaper_on_is_active'),
  DropIndex('index_ExamPaper_on_uploaded_at'),
  DropIndex('index_ExamPaper_on_last_synced_at'),
  DropIndex('index_ExamPaper_on_needs_sync'),
  DropIndex('index_MCQOption_on_question_id'),
  DropIndex('index_MCQOption_on_part_id'),
  DropIndex('index_MCQOption_on_is_correct'),
  DropIndex('index_MCQOption_on_order_index'),
  DropIndex('index_PaperFilters_on_updated_at'),
  DropIndex('index_PaperFilters_on_last_synced_at'),
  DropIndex('index_PaperFilters_on_needs_sync'),
  DropIndex('index__brick_Question_mcq_options_on_l_Question_brick_id_f_MCQOption_brick_id'),
  DropIndex('index_Question_on_paper_id'),
  DropIndex('index_Question_on_order_index'),
  DropIndex('index_Question_on_page_number'),
  DropIndex('index_Question_on_is_active'),
  DropIndex('index_Question_on_last_synced_at'),
  DropIndex('index_Question_on_needs_sync'),
  DropIndex('index__brick_QuestionPart_mcq_options_on_l_QuestionPart_brick_id_f_MCQOption_brick_id'),
  DropIndex('index_QuestionPart_on_question_id'),
  DropIndex('index_QuestionPart_on_parent_part_id'),
  DropIndex('index_QuestionPart_on_nesting_level'),
  DropIndex('index_QuestionPart_on_order_index'),
  DropIndex('index_QuestionPart_on_is_active'),
  DropIndex('index_QuestionPart_on_last_synced_at'),
  DropIndex('index_QuestionPart_on_needs_sync'),
  DropIndex('index_SolutionStep_on_part_id'),
  DropIndex('index_SolutionStep_on_question_id'),
  DropIndex('index_SolutionStep_on_order_index'),
  DropIndex('index_SolutionStep_on_last_synced_at'),
  DropIndex('index_SolutionStep_on_needs_sync'),
  DropIndex('index_StepAttempt_on_student_attempt_id'),
  DropIndex('index_StepAttempt_on_step_id'),
  DropIndex('index_StepAttempt_on_status'),
  DropIndex('index_StepAttempt_on_last_synced_at'),
  DropIndex('index_StepAttempt_on_needs_sync'),
  DropIndex('index_StudentAttempt_on_paper_id'),
  DropIndex('index_StudentAttempt_on_mode'),
  DropIndex('index_StudentAttempt_on_started_at'),
  DropIndex('index_StudentAttempt_on_completed_at'),
  DropIndex('index_StudentAttempt_on_last_synced_at'),
  DropIndex('index_StudentAttempt_on_needs_sync'),
  DropIndex('index_User_on_email'),
  DropIndex('index_User_on_grade'),
  DropIndex('index_User_on_role'),
  DropIndex('index_User_on_last_synced_at'),
  DropIndex('index_User_on_needs_sync')
];

//
// DO NOT EDIT BELOW THIS LINE
//

@Migratable(
  version: '20251017113207',
  up: _migration_20251017113207_up,
  down: _migration_20251017113207_down,
)
class Migration20251017113207 extends Migration {
  const Migration20251017113207()
    : super(
        version: 20251017113207,
        up: _migration_20251017113207_up,
        down: _migration_20251017113207_down,
      );
}
